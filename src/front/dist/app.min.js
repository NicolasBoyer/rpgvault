/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
var e;const t=window,s=t.trustedTypes,i=s?s.createPolicy("lit-html",{createHTML:e=>e}):void 0,n=`lit$${(Math.random()+"").slice(9)}$`,r="?"+n,o=`<${r}>`,a=document,d=(e="")=>a.createComment(e),l=e=>null===e||"object"!=typeof e&&"function"!=typeof e,c=Array.isArray,h=/<(?:(!--|\/[^a-zA-Z])|(\/?[a-zA-Z][^>\s]*)|(\/?$))/g,u=/-->/g,g=/>/g,p=RegExp(">|[ \t\n\f\r](?:([^\\s\"'>=/]+)([ \t\n\f\r]*=[ \t\n\f\r]*(?:[^ \t\n\f\r\"'`<>=]|(\"|')|))|$)","g"),m=/'/g,v=/"/g,b=/^(?:script|style|textarea|title)$/i,f=(e=>(t,...s)=>({_$litType$:e,strings:t,values:s}))(1),y=Symbol.for("lit-noChange"),$=Symbol.for("lit-nothing"),A=new WeakMap,w=(e,t,s)=>{var i,n;const r=null!==(i=null==s?void 0:s.renderBefore)&&void 0!==i?i:t;let o=r._$litPart$;if(void 0===o){const e=null!==(n=null==s?void 0:s.renderBefore)&&void 0!==n?n:null;r._$litPart$=o=new S(t.insertBefore(d(),e),e,void 0,null!=s?s:{})}return o._$AI(e),o},E=a.createTreeWalker(a,129,null,!1),I=(e,t)=>{const s=e.length-1,r=[];let a,d=2===t?"<svg>":"",l=h;for(let t=0;t<s;t++){const s=e[t];let i,c,f=-1,y=0;for(;y<s.length&&(l.lastIndex=y,c=l.exec(s),null!==c);)y=l.lastIndex,l===h?"!--"===c[1]?l=u:void 0!==c[1]?l=g:void 0!==c[2]?(b.test(c[2])&&(a=RegExp("</"+c[2],"g")),l=p):void 0!==c[3]&&(l=p):l===p?">"===c[0]?(l=null!=a?a:h,f=-1):void 0===c[1]?f=-2:(f=l.lastIndex-c[2].length,i=c[1],l=void 0===c[3]?p:'"'===c[3]?v:m):l===v||l===m?l=p:l===u||l===g?l=h:(l=p,a=void 0);const $=l===p&&e[t+1].startsWith("/>")?" ":"";d+=l===h?s+o:f>=0?(r.push(i),s.slice(0,f)+"$lit$"+s.slice(f)+n+$):s+n+(-2===f?(r.push(void 0),t):$)}const c=d+(e[s]||"<?>")+(2===t?"</svg>":"");if(!Array.isArray(e)||!e.hasOwnProperty("raw"))throw Error("invalid template strings array");return[void 0!==i?i.createHTML(c):c,r]};class k{constructor({strings:e,_$litType$:t},i){let o;this.parts=[];let a=0,l=0;const c=e.length-1,h=this.parts,[u,g]=I(e,t);if(this.el=k.createElement(u,i),E.currentNode=this.el.content,2===t){const e=this.el.content,t=e.firstChild;t.remove(),e.append(...t.childNodes)}for(;null!==(o=E.nextNode())&&h.length<c;){if(1===o.nodeType){if(o.hasAttributes()){const e=[];for(const t of o.getAttributeNames())if(t.endsWith("$lit$")||t.startsWith(n)){const s=g[l++];if(e.push(t),void 0!==s){const e=o.getAttribute(s.toLowerCase()+"$lit$").split(n),t=/([.?@])?(.*)/.exec(s);h.push({type:1,index:a,name:t[2],strings:e,ctor:"."===t[1]?L:"?"===t[1]?T:"@"===t[1]?N:_})}else h.push({type:6,index:a})}for(const t of e)o.removeAttribute(t)}if(b.test(o.tagName)){const e=o.textContent.split(n),t=e.length-1;if(t>0){o.textContent=s?s.emptyScript:"";for(let s=0;s<t;s++)o.append(e[s],d()),E.nextNode(),h.push({type:2,index:++a});o.append(e[t],d())}}}else if(8===o.nodeType)if(o.data===r)h.push({type:2,index:a});else{let e=-1;for(;-1!==(e=o.data.indexOf(n,e+1));)h.push({type:7,index:a}),e+=n.length-1}a++}}static createElement(e,t){const s=a.createElement("template");return s.innerHTML=e,s}}function C(e,t,s=e,i){var n,r,o,a;if(t===y)return t;let d=void 0!==i?null===(n=s._$Cl)||void 0===n?void 0:n[i]:s._$Cu;const c=l(t)?void 0:t._$litDirective$;return(null==d?void 0:d.constructor)!==c&&(null===(r=null==d?void 0:d._$AO)||void 0===r||r.call(d,!1),void 0===c?d=void 0:(d=new c(e),d._$AT(e,s,i)),void 0!==i?(null!==(o=(a=s)._$Cl)&&void 0!==o?o:a._$Cl=[])[i]=d:s._$Cu=d),void 0!==d&&(t=C(e,d._$AS(e,t.values),d,i)),t}class M{constructor(e,t){this.v=[],this._$AN=void 0,this._$AD=e,this._$AM=t}get parentNode(){return this._$AM.parentNode}get _$AU(){return this._$AM._$AU}p(e){var t;const{el:{content:s},parts:i}=this._$AD,n=(null!==(t=null==e?void 0:e.creationScope)&&void 0!==t?t:a).importNode(s,!0);E.currentNode=n;let r=E.nextNode(),o=0,d=0,l=i[0];for(;void 0!==l;){if(o===l.index){let t;2===l.type?t=new S(r,r.nextSibling,this,e):1===l.type?t=new l.ctor(r,l.name,l.strings,this,e):6===l.type&&(t=new P(r,this,e)),this.v.push(t),l=i[++d]}o!==(null==l?void 0:l.index)&&(r=E.nextNode(),o++)}return n}m(e){let t=0;for(const s of this.v)void 0!==s&&(void 0!==s.strings?(s._$AI(e,s,t),t+=s.strings.length-2):s._$AI(e[t])),t++}}class S{constructor(e,t,s,i){var n;this.type=2,this._$AH=$,this._$AN=void 0,this._$AA=e,this._$AB=t,this._$AM=s,this.options=i,this._$C_=null===(n=null==i?void 0:i.isConnected)||void 0===n||n}get _$AU(){var e,t;return null!==(t=null===(e=this._$AM)||void 0===e?void 0:e._$AU)&&void 0!==t?t:this._$C_}get parentNode(){let e=this._$AA.parentNode;const t=this._$AM;return void 0!==t&&11===e.nodeType&&(e=t.parentNode),e}get startNode(){return this._$AA}get endNode(){return this._$AB}_$AI(e,t=this){e=C(this,e,t),l(e)?e===$||null==e||""===e?(this._$AH!==$&&this._$AR(),this._$AH=$):e!==this._$AH&&e!==y&&this.$(e):void 0!==e._$litType$?this.T(e):void 0!==e.nodeType?this.k(e):(e=>c(e)||"function"==typeof(null==e?void 0:e[Symbol.iterator]))(e)?this.O(e):this.$(e)}S(e,t=this._$AB){return this._$AA.parentNode.insertBefore(e,t)}k(e){this._$AH!==e&&(this._$AR(),this._$AH=this.S(e))}$(e){this._$AH!==$&&l(this._$AH)?this._$AA.nextSibling.data=e:this.k(a.createTextNode(e)),this._$AH=e}T(e){var t;const{values:s,_$litType$:i}=e,n="number"==typeof i?this._$AC(e):(void 0===i.el&&(i.el=k.createElement(i.h,this.options)),i);if((null===(t=this._$AH)||void 0===t?void 0:t._$AD)===n)this._$AH.m(s);else{const e=new M(n,this),t=e.p(this.options);e.m(s),this.k(t),this._$AH=e}}_$AC(e){let t=A.get(e.strings);return void 0===t&&A.set(e.strings,t=new k(e)),t}O(e){c(this._$AH)||(this._$AH=[],this._$AR());const t=this._$AH;let s,i=0;for(const n of e)i===t.length?t.push(s=new S(this.S(d()),this.S(d()),this,this.options)):s=t[i],s._$AI(n),i++;i<t.length&&(this._$AR(s&&s._$AB.nextSibling,i),t.length=i)}_$AR(e=this._$AA.nextSibling,t){var s;for(null===(s=this._$AP)||void 0===s||s.call(this,!1,!0,t);e&&e!==this._$AB;){const t=e.nextSibling;e.remove(),e=t}}setConnected(e){var t;void 0===this._$AM&&(this._$C_=e,null===(t=this._$AP)||void 0===t||t.call(this,e))}}class _{constructor(e,t,s,i,n){this.type=1,this._$AH=$,this._$AN=void 0,this.element=e,this.name=t,this._$AM=i,this.options=n,s.length>2||""!==s[0]||""!==s[1]?(this._$AH=Array(s.length-1).fill(new String),this.strings=s):this._$AH=$}get tagName(){return this.element.tagName}get _$AU(){return this._$AM._$AU}_$AI(e,t=this,s,i){const n=this.strings;let r=!1;if(void 0===n)e=C(this,e,t,0),r=!l(e)||e!==this._$AH&&e!==y,r&&(this._$AH=e);else{const i=e;let o,a;for(e=n[0],o=0;o<n.length-1;o++)a=C(this,i[s+o],t,o),a===y&&(a=this._$AH[o]),r||(r=!l(a)||a!==this._$AH[o]),a===$?e=$:e!==$&&(e+=(null!=a?a:"")+n[o+1]),this._$AH[o]=a}r&&!i&&this.P(e)}P(e){e===$?this.element.removeAttribute(this.name):this.element.setAttribute(this.name,null!=e?e:"")}}class L extends _{constructor(){super(...arguments),this.type=3}P(e){this.element[this.name]=e===$?void 0:e}}const x=s?s.emptyScript:"";class T extends _{constructor(){super(...arguments),this.type=4}P(e){e&&e!==$?this.element.setAttribute(this.name,x):this.element.removeAttribute(this.name)}}class N extends _{constructor(e,t,s,i,n){super(e,t,s,i,n),this.type=5}_$AI(e,t=this){var s;if((e=null!==(s=C(this,e,t,0))&&void 0!==s?s:$)===y)return;const i=this._$AH,n=e===$&&i!==$||e.capture!==i.capture||e.once!==i.once||e.passive!==i.passive,r=e!==$&&(i===$||n);n&&this.element.removeEventListener(this.name,this,i),r&&this.element.addEventListener(this.name,this,e),this._$AH=e}handleEvent(e){var t,s;"function"==typeof this._$AH?this._$AH.call(null!==(s=null===(t=this.options)||void 0===t?void 0:t.host)&&void 0!==s?s:this.element,e):this._$AH.handleEvent(e)}}class P{constructor(e,t,s){this.element=e,this.type=6,this._$AN=void 0,this._$AM=t,this.options=s}get _$AU(){return this._$AM._$AU}_$AI(e){C(this,e)}}const O=t.litHtmlPolyfillSupport;null==O||O(k,S),(null!==(e=t.litHtmlVersions)&&void 0!==e?e:t.litHtmlVersions=[]).push("2.3.1");class H extends HTMLElement{#e;static get observedAttributes(){return["visible"]}get type(){return this.getAttribute("type")}get message(){return this.getAttribute("message")}get visible(){return this.getAttribute("visible")}set visible(e){this.setAttribute("visible",e)}connectedCallback(){this.#t(),setTimeout((()=>{this.#e=this.message,this.removeAttribute("message"),this.visible="visible"}),50),setTimeout((()=>{this.visible="",setTimeout((()=>this.remove()),225)}),4e3)}attributeChangedCallback(e,t,s){"visible"===e&&t!==s&&this.#t()}#t(){w(f`
			<div class='toast ${this.type} ${this.visible}' role='alert'>
				${this.#e}
			</div>
		`,this)}}class q extends HTMLElement{#s;static get observedAttributes(){return["list"]}get list(){return this.getAttribute("list").split(",").filter((e=>e))}set list(e){this.setAttribute("list",e)}connectedCallback(){this.#s=this.closest("div").querySelector("input"),this.#t()}attributeChangedCallback(e,t,s){"list"===e&&t!==s&&this.#t()}#i(e){e&&(this.#s.value=e),this.#s.focus(),this.dispatchEvent(new CustomEvent("listReset"))}#t(){w(this.list.length?f`
			<div class='propose'>
				${this.list.map((e=>f`
							<a
									href="#"
									@click="${t=>{t.preventDefault(),this.#i(e)}}"
									@keyup="${t=>{"ArrowDown"===t.key&&t.target.nextElementSibling&&t.target.nextElementSibling.focus(),"ArrowUp"===t.key&&t.target.previousElementSibling&&t.target.previousElementSibling.focus(),"Enter"===t.key&&this.#i(e)}}"
							>${e}</a>
						`))}
			</div>
		`:f``,this)}}class R{static set(...e){for(let t=0;t<e.length;t++)t%2==0&&sessionStorage.setItem(e[t],JSON.stringify(e[t+1]))}static get(...e){let t=[];return e.forEach((e=>t.push(JSON.parse(sessionStorage.getItem(e))))),t=t.filter((e=>e)),1===t.length&&t.length===e.length?t[0]:t.length&&t.length===e.length?t:null}}class B{static helpers({confirmMessage:e="",cbConfirm:t=null,isConfirmInit:s=!0,loaderVisible:i=!1}={}){w(f`
			<fs-loader ?visible="${i}"></fs-loader>
			<fs-confirm .message="${e}" ?open="${s?!s:Math.random()}" @modalConfirm="${()=>t()}"></fs-confirm>
		`,document.body)}static loader(e){this.helpers({loaderVisible:e})}static confirm(e,t,s){this.helpers({confirmMessage:e,cbConfirm:t,isConfirmInit:!1})}static toast(e,t){(class{static newDom(e){return this.setCurrent(e)}static setCurrent(e){return this.currentElement=e,this}static elt(e,t){const s=document.createElement(e);return t&&(s.className=t),this.currentElement.appendChild(s),this.currentElement=s,this}static svg(e){const t=document.createElementNS("http://www.w3.org/2000/svg","svg");t.classList.add(e);const s=document.createElementNS("http://www.w3.org/2000/svg","use");return t.appendChild(s),s.setAttribute("href",`#${e}`),this.currentElement.appendChild(t),this.currentElement=t,this}static att(e,t){return null!==t&&this.currentElement.setAttribute(e,t),this}static text(e){return null!==e&&this.currentElement.appendChild(document.createTextNode(e)),this}static listen(e,t){return this.currentElement.addEventListener(e,t,!1),this}static up(){return this.currentElement=this.currentElement.parentNode,this.currentElement||(this.currentElement=document.body),this}static clear(){return this.currentElement.innerHTML="",this}static current(){return this.currentElement}static remove(){this.currentElement.remove()}}).newDom(document.body).elt("fs-toast").att("type",e).att("message",t)}static async request(e,t="GET",s,i){const n=await fetch(e,{method:t,...s});if("status"===i&&"HEAD"===t)return n.status;if(200!==n.status&&204!==n.status)console.error("Request failed : "+n.status),console.log(n);else switch(i){case"blob":return n.blob();case"text":return n.text();case"response":return n;default:return n.json()}}static async getFragmentHtml(e){const t=R.get(e)||await B.request(e,"POST");return R.set(e,t),t}}class z extends HTMLElement{static get observedAttributes(){return["open"]}get open(){return this.hasAttribute("open")}set open(e){e?this.setAttribute("open",""):this.removeAttribute("open")}connectedCallback(){this.#t(),this.style.display="none"}attributeChangedCallback(e,t,s){"open"===e&&t!==s&&(this.style.display="",setTimeout((()=>this.#t()),50))}#n(){this.open=!1,setTimeout((()=>{this.style.display="none",this.message="",this.#t()}),225)}#t(){w(f`
			<dialog ?open="${this.open}">
				<article>
					${this.message}
					<footer>
						<a role="button" class="secondary" @click="${e=>{e.preventDefault(),this.#n()}}">Cancel</a>
						<a role="button" @click="${e=>{e.preventDefault(),this.dispatchEvent(new CustomEvent("modalConfirm")),this.#n()}}">Confirm</a>
					</footer>
				</article>
			</dialog>
		`,this)}}class D extends HTMLElement{#r;#o;static get observedAttributes(){return["choiceMode"]}get choiceMode(){return this.getAttribute("choiceMode")}set choiceMode(e){e?this.setAttribute("choiceMode",e):this.removeAttribute("choiceMode")}async connectedCallback(){this.#r=await this.#a(),this.#d(),this.querySelector("input").addEventListener("keyup",(e=>this.#d(e.target.value)))}attributeChangedCallback(e,t,s){"choiceMode"===e&&t!==s&&this.#t()}async#a(){const e=R.get("recipes")||await B.request("/db","POST",{body:'{ "getRecipes": "" }'});return R.set("recipes",e),e}async#l(e){B.confirm(f`<h3>Voulez-vous vraiment supprimer ?</h3>`,(async()=>{this.#r=await B.request("/db","POST",{body:`{ "removeRecipe": "${e._id}" }`}),R.set("recipes",this.#r),this.#d(),B.toast("success","Recette supprimée")}))}#d(e){this.#o=(e&&Array.isArray(this.#r)?this.#r.filter((t=>t.title.toLowerCase().includes(e.toLowerCase()))):!Array.isArray(this.#r)&&Object.keys(this.#r).length?[this.#r]:this.#r).sort(((e,t)=>e.title.localeCompare(t.title))),this.#t()}#t(){let e=[];w(f`
			${this.choiceMode?"":f`<h2>Liste des recettes</h2>`}
			<label>
				<input type="search" name="search" placeholder="Rechercher"/>
			</label>
			<aside>
				<nav>
					<ul>
						${this.#o.length?this.#o.map((t=>f`
									<li>
										${this.choiceMode?f`
											<label for="${t.slug}">
												<input type="${this.choiceMode}" id="${t.slug}" name="${"checkbox"===this.choiceMode?t.slug:"recipe"}" value="${t.title}" @change="${s=>{const i=t._id;s.target.checked?e.push(i):e=e.filter((e=>e!==i));let n={choices:e};"radio"===this.choiceMode&&(n={...n,title:t.title}),document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:n}))}}">
												${t.title}
											</label>
										`:f`
											<div>
												<span>${t.title}</span>
												<fs-link role="button" class="edit" href="/app/recipe/edit/${t.slug}">
													<svg class="edit">
														<use href="#edit"></use>
													</svg>
													<span>Éditer</span>
												</fs-link>
												<button type="button" class="remove" @click="${()=>this.#l(t)}">
													<svg class="remove">
														<use href="#remove"></use>
													</svg>
													<span>Supprimer</span>
												</button>
											</div>
											<div class="ingredients">
												${t.ingredients?.map(((e,s)=>e.title+(t.ingredients.length-1===s?"":", ")))}
											</div>
										`}
									</li>
								`)):f`
							<li>Aucun résultat</li>`}
					</ul>
				</nav>
			</aside>
		`,this)}}class W extends HTMLElement{#c;#h;#u;#g;async connectedCallback(){const e=R.get("ingredients","categories")||await B.request("/db","POST",{body:'[{ "getIngredients": "" }, { "getCategories": "" }]'});R.set("ingredients",e[0],"categories",e[1]),this.#c=e[0],this.#g=e[1],this.#d(),this.querySelector("input").addEventListener("keyup",(e=>this.#d(e.target.value)))}async#p(e,t){this.#c=await B.request("/db","POST",{body:`{ "setIngredients": { "ingredients": [ { "title": "${t}", "id": "${e}" } ] } }`}),R.set("ingredients",this.#c),this.#m()}#m(){this.#h=null,this.#d(this.querySelector("input").value)}async#v(e){B.confirm(f`<h3>Voulez-vous vraiment supprimer ?</h3>`,(async()=>{this.#c=await B.request("/db","POST",{body:`{ "removeIngredient": "${e}" }`}),R.set("ingredients",this.#c),this.#d(this.querySelector("input").value),B.toast("success","Ingrédient supprimé")}))}#b(e,t,s,i){let n;document.body.addEventListener("modalConfirm",(e=>{n=e.detail.id})),B.confirm(f`
			<fs-categories choiceMode="${i}"/>
		`,(async()=>{this.#c=await B.request("/db","POST",{body:`{ "setIngredients": { "ingredients": [ { "title": "${s}", "id": "${t}", "category": "${n}" } ] } }`}),R.set("ingredients",this.#c),this.#d()}))}#d(e){this.#u=(e?this.#c.filter((t=>t.title.toLowerCase().includes(e.toLowerCase()))):this.#c).sort(((e,t)=>e.title.localeCompare(t.title))),this.#t()}#t(){w(f`
			<h2>Liste des ingrédients</h2>
			<label>
				<input type="search" name="search" placeholder="Rechercher"/>
			</label>
			<aside>
				<nav>
					<ul>
						${this.#u.length?this.#u.map((e=>{const t=e.title,s=this.#g.map((t=>t._id===e.category&&t.title)).filter((e=>e))[0],i=e._id;return f`
										<li>
											<div>
												${this.#h===i?f`
													<input name="${i}" required type="text" value="${t}" @keyup="${e=>{"Enter"===e.key&&this.#p(i,e.target.value),"Escape"===e.key&&this.#m()}}"/>
												`:f`
													<span>${t}${s?f` (${s})`:""}</span>
												`}
												${this.#h===i?f`
													<button class="valid" @click="${e=>this.#p(i,e.target.closest("button").previousElementSibling.value)}">
														<svg class="valid">
															<use href="#valid"></use>
														</svg>
														<span>Valider</span>
													</button>
												`:f`
													<button class="edit" @click="${()=>{this.#h=i,this.#d(this.querySelector("input").value)}}">
														<svg class="edit">
															<use href="#edit"></use>
														</svg>
														<span>Modifier</span>
													</button>
												`}
												${this.#h===i?f`
													<button type="button" class="undo" @click="${()=>this.#m()}">
														<svg class="undo">
															<use href="#undo"></use>
														</svg>
														<span>Annuler</span>
													</button>
												`:f`
													<button type="button" class="remove" @click="${()=>this.#v(i)}">
														<svg class="remove">
															<use href="#remove"></use>
														</svg>
														<span>Supprimer</span>
													</button>
													<button type="button" class="setCategory" @click="${s=>this.#b(s,i,t,e.category)}">
														<svg class="setCategory">
															<use href="#setCategory"></use>
														</svg>
														<span>Associer une catégorie</span>
													</button>
												`}
											</div>
										</li>
									`})):f`
							<li>Aucun résultat</li>`}
					</ul>
				</nav>
			</aside>
		`,this)}}class j{static strings={ordered:"Acheté",gram:"Gramme",centiliter:"Centilitre",number:"Nombre"};static getUnitSelect(e,t){return f`
			<select class="unit" name="${e||"unit"}">
				<option ?selected="${"nb"===t}" value="nb">${this.strings.number}</option>
				<option ?selected="${"g"===t}" value="g">${this.strings.gram}</option>
				<option ?selected="${"cl"===t}" value="cl">${this.strings.centiliter}</option>
			</select>
		`}static setPropositions(e){this.savedIngredients&&this.savedIngredients.length&&(this.propositions=e?this.savedIngredients.length&&this.savedIngredients.map((e=>e.title)).filter((t=>t.toLowerCase().includes(e.toLowerCase()))):[])}static clearPropositionsOnBackgroundClick(e){document.body.addEventListener("click",(t=>{t.target.closest("div.propose")||(this.setPropositions(),e())}))}static managePropositions(e,t){const s=e.target;this.setPropositions(s.value),this.isProposeOpen=!0,"Enter"===e.key?(t(e),this.isProposeOpen=!1,e.preventDefault()):"ArrowDown"===e.key&&this.propositions?s.closest(".grid").querySelector("fs-propose a:first-child").focus():this.propositions.length&&(0===s.value.length||1===this.propositions.length&&this.propositions[0].toLowerCase()===s.value)&&(this.propositions[0].toLowerCase()===s.value&&(s.value=this.propositions[0]),this.setPropositions(),this.isProposeOpen=!1)}}j.savedIngredients=[];class V extends HTMLElement{#f;#y;#$;#A;#w;#E;#I;#k;#C;async connectedCallback(){j.clearPropositionsOnBackgroundClick((()=>this.#t()));const e=location.pathname.split("/");this.#f="Ajouter",this.#y="Ajouter une recette",this.#$=e.includes("edit"),this.#A=this.#$,this.#$?(this.#w=e[e.length-1],this.#E=R.get(`${this.#w}`)||await B.request("/db","POST",{body:`{ "getRecipes": { "slug": "${this.#w}" } }`}),R.set(this.#w,this.#E),Array.isArray(this.#E)&&(location.href=location.origin+"/404.html"),this.#I=this.#E.title,this.#k=this.#E._id,this.#f="Modifier",this.#y="Modifier une recette",this.#C=this.#E.ingredients):this.#C=[],j.savedIngredients=R.get("ingredients")||await B.request("/db","POST",{body:'{ "getIngredients": "" }'}),R.set("ingredients",j.savedIngredients),document.body.style.display="flex",this.#t(),this.#M()}#M(){const e=this.querySelector("form");e.addEventListener("keypress",(async e=>{"Enter"===e.key&&e.preventDefault()})),e.addEventListener("submit",(async t=>{t.preventDefault();try{const t=Object.fromEntries(new FormData(e).entries()),s=t.id,i=Object.keys(t).reduce(((e,s)=>{if("recipe"!==s&&"id"!==s&&(!e.some((e=>e.title===t[s]))&&s.includes("ingredient")&&e.push({title:t[s]}),!s.includes("ingredient"))){const i=s.split("_");e[0===Number(i[1])?e.length-1:Number(i[1])-1][i[0]]=t[s]}return e}),[]);this.#$&&(this.#E.ingredients=i,R.set(this.#w,this.#E)),B.loader(!0);const n=await B.request("/db","POST",{body:`{ "setRecipe": { "title": "${t.recipe}", ${s?`"id": "${s}",`:""} "ingredients": ${JSON.stringify(i)}} }`});R.set("recipes",n[0]),B.loader(!1),this.#$?location.href="/app/recipes":(this.#C=[],document.querySelectorAll("input").forEach((e=>{e.value=""})),B.toast("success","Recette enregistrée"),j.savedIngredients=n[1],R.set("ingredients",j.savedIngredients),this.#t())}catch(e){console.error(e)}}))}#S(e){j.setPropositions();const t=e.target.closest(".grid"),s=t.querySelector(".ingredient"),i=t.querySelector(".size"),n=t.querySelector(".unit");s?.value&&(this.#C.push({title:s.value,size:i.value,unit:n.value}),s.value="",i.value="",n.value="nb",this.#t())}#v(e){j.setPropositions(),this.#C.splice(e,1),this.#t()}#t(){w(f`
			<h2>${this.#y}</h2>
			<form>
				<label>
					<span>Nom</span>
					<input name="recipe" required type="text" value="${this.#I||""}">
					<input name="id" type="hidden" value="${this.#k||""}">
				</label>
				<fieldset class="ingredients">
					<legend>Ingrédients</legend>
					${this.#C?.map(((e,t)=>f`
								<div class="grid ${this.#A&&this.#C.length-1===t?"fiveCol":""}">
									<label>
										<input name="ingredient_${t+1}" required type="text" value="${e?.title||e}"/>
									</label>
									<input name="size_${t+1}" type="number" value="${e?.size||""}"/>
									${j.getUnitSelect(`unit_${t+1}`,e?.unit||"")}
									<button type="button" class="remove" @click="${()=>this.#v(t)}">
										<svg class="minus">
											<use href="#minus"></use>
										</svg>
										<span>Supprimer un ingrédient</span>
									</button>
									${this.#A&&this.#C.length-1===t?f`
										<button type="button" class="add" @click="${e=>{this.#A=!1,this.#S(e)}}">
											<svg class="add">
												<use href="#add"></use>
											</svg>
											<span>Ajouter un ingrédient</span>
										</button>
									`:""}
								</div>
							`))}
					${this.#A?"":f`
						<div class="grid">
							<label>
								<input
										class="ingredient"
										name="ingredient_0"
										required
										type="text"
										@keyup="${e=>{j.managePropositions(e,(()=>{j.setPropositions(),console.log(j.isProposeOpen)})),this.#t(),j.isProposeOpen||"Enter"===e.key&&this.#S(e)}}"
								/>
							</label>
							<input class="size" name="size_0" type="number" @keyup="${e=>{"Enter"===e.key&&this.#S(e)}}"/>
							${j.getUnitSelect("unit_0")}
							<button type="button" class="add" @click="${e=>this.#S(e)}">
								<svg class="add">
									<use href="#add"></use>
								</svg>
								<span>Ajouter un ingrédient</span>
							</button>
							<fs-propose list="${j.propositions}" @listReset="${()=>{j.setPropositions(),this.#t()}}"></fs-propose>
					`}
					</div>
				</fieldset>
				<button type="submit">
					<span>${this.#f}</span>
				</button>
			</form>
		`,this)}}const U=new Set,F=new WeakMap,J=new WeakMap,Y=new WeakMap,G=new WeakMap,Z=new WeakMap,X=new WeakMap,K=new WeakMap,Q=new WeakSet;let ee;const te="__aa_tgt",se="__aa_del";function ie(e){clearTimeout(K.get(e));const t=ue(e),s="function"==typeof t?500:t.duration;K.set(e,setTimeout((async()=>{const t=Y.get(e);t&&!await t.finished||(F.set(e,ce(e)),function(e){const t=G.get(e);null==t||t.disconnect();let s=F.get(e),i=0;s||(s=ce(e),F.set(e,s));const{offsetWidth:n,offsetHeight:r}=ee,o=[s.top-5,n-(s.left+5+s.width),r-(s.top+5+s.height),s.left-5].map((e=>-1*Math.floor(e)+"px")).join(" "),a=new IntersectionObserver((()=>{++i>1&&ie(e)}),{root:ee,threshold:1,rootMargin:o});a.observe(e),G.set(e,a)}(e))}),s))}function ne(e){setTimeout((()=>{Z.set(e,setInterval((()=>re(ie.bind(null,e))),2e3))}),Math.round(2e3*Math.random()))}function re(e){"function"==typeof requestIdleCallback?requestIdleCallback((()=>e())):requestAnimationFrame((()=>e()))}let oe,ae;function de(e,t){t||te in e?t&&!(te in t)&&Object.defineProperty(t,te,{value:e}):Object.defineProperty(e,te,{value:e})}function le(e){return Number(e.replace(/[^0-9.\-]/g,""))}function ce(e){const t=e.getBoundingClientRect();return{top:t.top+window.scrollY,left:t.left+window.scrollX,width:t.width,height:t.height}}function he(e,t,s){let i=t.width,n=t.height,r=s.width,o=s.height;const a=getComputedStyle(e);if("content-box"===a.getPropertyValue("box-sizing")){const e=le(a.paddingTop)+le(a.paddingBottom)+le(a.borderTopWidth)+le(a.borderBottomWidth),t=le(a.paddingLeft)+le(a.paddingRight)+le(a.borderRightWidth)+le(a.borderLeftWidth);i-=t,r-=t,n-=e,o-=e}return[i,r,n,o].map(Math.round)}function ue(e){return te in e&&X.has(e[te])?X.get(e[te]):{duration:250,easing:"ease-in-out"}}function ge(e){if(te in e)return e[te]}function pe(e){const t=ge(e);return!!t&&Q.has(t)}function me(e,...t){t.forEach((t=>t(e,X.has(e))));for(let s=0;s<e.children.length;s++){const i=e.children.item(s);i&&t.forEach((e=>e(i,X.has(i))))}}"undefined"!=typeof window&&(ee=document.documentElement,oe=new MutationObserver((e=>{const t=function(e){return e.reduce(((e,t)=>{if(!1===e)return!1;if(t.target instanceof Element){if(de(t.target),!e.has(t.target)){e.add(t.target);for(let s=0;s<t.target.children.length;s++){const i=t.target.children.item(s);if(i){if(se in i)return!1;de(t.target,i),e.add(i)}}}if(t.removedNodes.length)for(let s=0;s<t.removedNodes.length;s++){const i=t.removedNodes[s];if(se in i)return!1;i instanceof Element&&(e.add(i),de(t.target,i),J.set(i,[t.previousSibling,t.nextSibling]))}}return e}),new Set)}(e);t&&t.forEach((e=>function(e){var t;const s=ee.contains(e),i=F.has(e);s&&J.has(e)&&J.delete(e),Y.has(e)&&(null===(t=Y.get(e))||void 0===t||t.cancel()),i&&s?function(e){const t=F.get(e),s=ce(e);if(!pe(e))return F.set(e,s);let i;if(!t)return;const n=ue(e);if("function"!=typeof n){const r=t.left-s.left,o=t.top-s.top,[a,d,l,c]=he(e,t,s),h={transform:`translate(${r}px, ${o}px)`},u={transform:"translate(0, 0)"};a!==d&&(h.width=`${a}px`,u.width=`${d}px`),l!==c&&(h.height=`${l}px`,u.height=`${c}px`),i=e.animate([h,u],{duration:n.duration,easing:n.easing})}else i=new Animation(n(e,"remain",t,s)),i.play();Y.set(e,i),F.set(e,s),i.addEventListener("finish",ie.bind(null,e))}(e):i&&!s?function(e){var t;if(!J.has(e)||!F.has(e))return;const[s,i]=J.get(e);function n(){var t;e.remove(),F.delete(e),J.delete(e),Y.delete(e),null===(t=G.get(e))||void 0===t||t.disconnect()}if(Object.defineProperty(e,se,{value:!0}),i&&i.parentNode&&i.parentNode instanceof Element?i.parentNode.insertBefore(e,i):s&&s.parentNode?s.parentNode.appendChild(e):null===(t=ge(e))||void 0===t||t.appendChild(e),!pe(e))return n();const[r,o,a,d]=function(e){const t=F.get(e),[s,,i]=he(e,t,ce(e));let n=e.parentElement;for(;n&&("static"===getComputedStyle(n).position||n instanceof HTMLBodyElement);)n=n.parentElement;n||(n=document.body);const r=getComputedStyle(n),o=F.get(n)||ce(n);return[Math.round(t.top-o.top)-le(r.borderTopWidth),Math.round(t.left-o.left)-le(r.borderLeftWidth),s,i]}(e),l=ue(e),c=F.get(e);let h;Object.assign(e.style,{position:"absolute",top:`${r}px`,left:`${o}px`,width:`${a}px`,height:`${d}px`,margin:0,pointerEvents:"none",transformOrigin:"center",zIndex:100}),"function"!=typeof l?h=e.animate([{transform:"scale(1)",opacity:1},{transform:"scale(.98)",opacity:0}],{duration:l.duration,easing:"ease-out"}):(h=new Animation(l(e,"remove",c)),h.play()),Y.set(e,h),h.addEventListener("finish",n)}(e):function(e){const t=ce(e);F.set(e,t);const s=ue(e);if(!pe(e))return;let i;"function"!=typeof s?i=e.animate([{transform:"scale(.98)",opacity:0},{transform:"scale(0.98)",opacity:0,offset:.5},{transform:"scale(1)",opacity:1}],{duration:1.5*s.duration,easing:"ease-in"}):(i=new Animation(s(e,"add",t)),i.play()),Y.set(e,i),i.addEventListener("finish",ie.bind(null,e))}(e)}(e)))})),ae=new ResizeObserver((e=>{e.forEach((e=>{e.target===ee&&(clearTimeout(K.get(ee)),K.set(ee,setTimeout((()=>{U.forEach((e=>me(e,(e=>re((()=>ie(e)))))))}),100))),F.has(e.target)&&ie(e.target)}))})),ae.observe(ee));class ve{static init(){this.connection=new WebSocket(`${"http:"===location.protocol?"ws:":"wss:"}//${location.host}`)}static listen(e,t=(()=>{})){1===this.connection.readyState&&t(),this.connection.onopen=t,this.connection.onerror=e=>{console.error("WebSocket Error "+e),this.connection.close()},this.connection.onclose=e=>{console.log("Socket is closed. Reconnect will be attempted in 1 second.",e.reason),setTimeout((()=>this.init()),1e3)},this.connection.onmessage=e}static send(e){this.connection.send(JSON.stringify(e))}}class be extends HTMLElement{#u;#g;#_;#L;#h;async connectedCallback(){await ve.listen((async e=>{this.#u=JSON.parse(await e.data.text()),this.#x()}),(async()=>{j.clearPropositionsOnBackgroundClick((()=>this.#t()));const e=R.get("listIngredients","categories","ingredients")||await B.request("/db","POST",{body:'[{ "getListIngredients": "" }, { "getCategories": "" }, { "getIngredients": "" }]'});R.set("listIngredients",e[0],"categories",e[1],"ingredients",e[2]),this.#u=e[0],this.#g=e[1],j.savedIngredients=e[2],this.#_=[],this.#T();const t=R.get("recipes","dishes")||await B.request("/db","POST",{body:'[{ "getRecipes": "" }, { "getDishes": "" }]'});R.set("recipes",t[0],"dishes",t[1])}))}#T(){ve.send(this.#u),this.#x()}#x(){R.set("listIngredients",this.#u),this.#L=this.#u.length?this.#u.filter((e=>e.ordered)).map((e=>e._id)):[],this.#t();try{!function(e,t={}){oe&&ae&&(window.matchMedia("(prefers-reduced-motion: reduce)").matches&&"function"!=typeof t&&!t.disrespectUserMotionPreference||(Q.add(e),"static"===getComputedStyle(e).position&&Object.assign(e.style,{position:"relative"}),me(e,ie,ne,(e=>null==ae?void 0:ae.observe(e))),"function"==typeof t?X.set(e,t):X.set(e,{duration:250,easing:"ease-in-out",...t}),oe.observe(e,{childList:!0}),U.add(e))),Object.freeze({parent:e,enable:()=>{Q.add(e)},disable:()=>{Q.delete(e)},isEnabled:()=>Q.has(e)})}(document.querySelector("ul"))}catch(e){}}#m(){this.#h=null,this.#T()}async#N(e,t){j.setPropositions();const s="INPUT"===e.target.tagName&&"ingredient"===e.target.name?e.target:"INPUT"===e.target.tagName&&"size"===e.target.name?e.target.previousElementSibling:"SELECT"===e.target.tagName?e.target.previousElementSibling.previousElementSibling:e.target.closest("button").previousElementSibling.previousElementSibling.previousElementSibling,i=s.nextElementSibling,n=s.nextElementSibling.nextElementSibling;if(s?.value){const e=j.savedIngredients.map((e=>e.title===s.value&&e.category)).filter((e=>e))[0],r=await B.request("/db","POST",{body:`[{ "setListIngredients": { "ingredients": [ { "title": "${s.value}"${t?`, "id": "${t}"`:""}${e?`, "category": "${e}"`:""}, "size": "${i.value}", "unit": "${n.value}" } ] } }, { "getIngredients": "" }]`});this.#u=r[0],j.savedIngredients=r[1],R.set("listIngredients",this.#u,"ingredients",j.savedIngredients),s.value="",i.value="",this.#m()}}async#P(e,t){this.#u=await B.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": [ { "id": "${e}", "ordered": ${t} } ] } }`}),R.set("listIngredients",this.#u),this.#m()}async#O(e){B.confirm(f`<h3>Voulez-vous vraiment supprimer ?</h3>`,(async()=>{this.#u=await B.request("/db","POST",{body:`{ "removeListIngredient": "${e}" }`}),R.set("listIngredients",this.#u),this.#T(),B.toast("success","Ingrédient supprimé")}))}#H(){document.body.addEventListener("modalConfirm",(e=>{this.#_=e.detail.choices})),B.confirm(f`
			<fs-recipes choiceMode="checkbox"/>
		`,(async()=>{if(this.#_.length){const e=[];j.savedIngredients.forEach((t=>{const s=t.recipes.find((e=>this.#_.some((t=>e.recipeId===t))));s&&e.push({title:t.title,size:s.size,unit:s.unit,category:t.category})})),this.#u=await B.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": ${JSON.stringify(e)} } }`}),R.set("listIngredients",this.#u),this.#_=[],this.#T()}}))}#b(e,t,s){let i;document.body.addEventListener("modalConfirm",(e=>{i=e.detail.id})),B.confirm(f`
			<fs-categories choiceMode/>
		`,(async()=>{const e=await B.request("/db","POST",{body:`[{ "setListIngredients": { "ingredients": [ { "title": "${s}", "id": "${t}", "category": "${i}" } ] } }, { "getIngredients": "" }]`});this.#u=e[0],j.savedIngredients=e[1],R.set("listIngredients",this.#u,"ingredients",j.savedIngredients),this.#T()}))}#q(){B.confirm(f`<h3>Voulez vous vider la liste ?</h3>`,(async()=>{this.#L=[],this.#u=await B.request("/db","POST",{body:'{ "clearListIngredients": "" }'}),R.set("listIngredients",this.#u),this.#T()}))}#t(){const e=e=>{const t=e._id,s=e.title,i=e.size,n=e.unit,r=this.#L?.includes(t);return f`
				<li>
					<div class="editListIngredient ${this.#h===t?"grid":""}">
						${this.#h===t?f`
							<input class="ingredient" name="ingredient" required type="text" value="${s}" @keyup="${e=>{"Enter"===e.key&&this.#N(e,t),"Escape"===e.key&&this.#m()}}"/>
							<input class="size" name="size" type="number" value="${i}" @keyup="${e=>{"Enter"===e.key&&this.#N(e,t),"Escape"===e.key&&this.#m()}}"/>
							${j.getUnitSelect()}
						`:f`
							<a class="${r?"ordered":""}" @click="${()=>{this.#P(t,!r),r?this.#L=this.#L.filter((e=>t!==e)):this.#L.push(t),this.#L.length===this.#u.length&&this.#q()}}"><span>${s}${i&&f` (${i}${"nb"!==n?` ${n}`:""})`}</span></a>
						`}
						${this.#h===t?f`
							<button class="valid" @click="${e=>this.#N(e,t)}">
								<svg class="valid">
									<use href="#valid"></use>
								</svg>
								<span>Valider</span>
							</button>
						`:f`
							<button class="edit" @click="${()=>{this.#h=t,this.#t()}}" .disabled="${r}">
								<svg class="edit">
									<use href="#edit"></use>
								</svg>
								<span>Modifier</span>
							</button>
						`}
						${this.#h===t?f`
							<button type="button" class="undo" @click="${()=>this.#m()}">
								<svg class="undo">
									<use href="#undo"></use>
								</svg>
								<span>Annuler</span>
							</button>
						`:f`
							<button type="button" class="remove" @click="${()=>this.#O(t)}" .disabled="${r}">
								<svg class="remove">
									<use href="#remove"></use>
								</svg>
								<span>Supprimer</span>
							</button>
							${e.category?"":f`
								<button type="button" class="setCategory" @click="${e=>this.#b(e,t,s)}" .disabled="${r}">
									<svg class="setCategory">
										<use href="#setCategory"></use>
									</svg>
									<span>Associer une catégorie</span>
								</button>
							`}
						`}
					</div>
				</li>
			`},t=e=>this.#g.map((t=>t._id===e&&t.title)).filter((e=>e))[0],s=this.#u?.filter((e=>e.category||e.ordered)).sort(((e,s)=>t(e.category)?.localeCompare(t(s.category)))).reduce(((e,s)=>{const i=s.category,n=s.ordered?j.strings.ordered:t(i);return e[n]=e[n]??[],e[n].push(s),e}),{});w(f`
			<div class="title">
				<h2>Votre liste</h2>
				<button type="button" class="trash" @click="${()=>this.#q()}">
					<svg class="trash">
						<use href="#trash"></use>
					</svg>
					<span>Vider</span>
				</button>
			</div>
			<aside>
				<nav>
					<ul>
						<li>
							<div class="addListIngredient grid">
								<input class="ingredient" name="ingredient" type="text" @keyup="${async e=>{await j.managePropositions(e,(()=>this.#N(e))),this.#t()}}"/>
								<input class="size" name="size" type="number" @keyup="${e=>{"Enter"===e.key&&this.#N(e)}}"/>
								${j.getUnitSelect()}
								<button type="button" class="add" @click="${e=>this.#N(e)}">
									<svg class="add">
										<use href="#add"></use>
									</svg>
									<span>Ajouter un ingrédient</span>
								</button>
								<button type="button" class="addList" @click="${()=>this.#H()}">
									<svg class="addList">
										<use href="#addList"></use>
									</svg>
									<span>Ajouter des ingrédients</span>
								</button>
								<fs-propose list="${j.propositions}" @listReset="${()=>{j.setPropositions(),this.#t()}}"></fs-propose>
							</div>
						</li>
						${this.#u.length?f`
									${this.#u.filter((e=>!e.category&&!e.ordered)).map((t=>e(t)))}
									${Object.entries(s).sort((([e,t],[s,i])=>e===j.strings.ordered?1:s===j.strings.ordered?-1:e.localeCompare(s))).map((([t,s])=>f`
											<li>
												<div class="category">${t}</div>
												<ul>
													${s.sort(((e,t)=>e.title.localeCompare(t.title))).map((t=>e(t)))}
												</ul>
											</li>
										`))}
								`:f`
									<li>Aucun ingrédient ...</li>`}
					</ul>
				</nav>
			</aside>
		`,this)}}class fe extends HTMLElement{get src(){return this.getAttribute("src")}get alt(){return this.getAttribute("alt")}constructor(){super(),this.#t()}connectedCallback(){const e=this.querySelector("img");e.style.transform=`translate3d(0, ${window.scrollY}px, 0)`,window.addEventListener("scroll",(()=>{e.style.transform=`translate3d(0, ${.5*window.scrollY}px, 0)`,window.scrollY>=this.getBoundingClientRect().height?this.firstElementChild.classList.add("titles"):this.firstElementChild.classList.remove("titles")}))}#t(){w(f`
			<div class="image">
				<img alt="${this.alt}" src="${this.src}"/>
			</div>
		`,this)}}class ye extends HTMLElement{connectedCallback(){this.#t(),this.#M()}#M(){const e=this.querySelector("form");e.addEventListener("submit",(async t=>{t.preventDefault(),await B.request("/auth","POST",{body:JSON.stringify(Object.fromEntries(new FormData(e).entries()))}),location.href="/app"}))}#t(){w(f`
			<form>
				<label>
					<span>Identifiant</span>
					<input name="id" required type="text">
				</label>
				<label>
					<span>Mot de passe</span>
					<input name="password" required type="password">
				</label>
				<button type="submit">
					<span>Envoyer</span>
				</button>
			</form>
		`,this)}}class $e extends HTMLElement{#g;#h;get choiceMode(){const e=this.getAttribute("choiceMode");return null!==e?e:null}set choiceMode(e){e?this.setAttribute("choiceMode",e):this.removeAttribute("choiceMode")}async connectedCallback(){this.#g=R.get("categories")||await B.request("/db","POST",{body:'{ "getCategories": "" }'}),R.set("categories",this.#g),this.#t()}#m(){this.#h=null,this.#t()}async#R(e,t){const s="INPUT"===e.target.tagName?e.target:e.target.closest("button").previousElementSibling;s?.value&&(this.#g=await B.request("/db","POST",{body:`{ "setCategory": { "title": "${s.value}"${t?`, "id": "${t}"`:""} } }`}),R.set("categories",this.#g),s.value="",this.#m())}async#B(e){B.confirm(f`<h3>Voulez-vous vraiment supprimer ?</h3>`,(async()=>{this.#g=await B.request("/db","POST",{body:`{ "removeCategory": "${e}" }`}),R.set("categories",this.#g),this.#t(),B.toast("success","Catégorie supprimée")}))}#t(){this.#g.sort(((e,t)=>e.title.localeCompare(t.title))),w(f`
			${null===this.choiceMode?f`<h2>Liste des catégories</h2>`:""}
			<aside>
				<nav>
					<ul>
						<li>
							${null===this.choiceMode?f`
										<div class="addCategory grid">
											<input name="newCategory" type="text" @keyup="${e=>{"Enter"===e.key&&this.#R(e)}}"/>
											<button type="button" class="add" @click="${e=>this.#R(e)}">
												<svg class="add">
													<use href="#add"></use>
												</svg>
												<span>Ajouter une catégorie</span>
											</button>
										</div>
									`:""}
						</li>
						${this.#g.length?this.#g.map((e=>{const t=e.title,s=e._id;return null!==this.choiceMode?f`
										<label for="${s}">
											<input type="radio" id="${s}" name="category" value="${t}" .checked="${this.choiceMode===s}"
												   @change="${()=>document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:{id:s,title:t}}))}">
											${t}
										</label>
									`:f`
										<li>
											<div class="editCategory ${this.#h===s?"grid":""}">
												${this.#h===s?f`
													<input name="editCategory" required type="text" value="${t}" @keyup="${e=>{"Enter"===e.key&&this.#R(e,s),"Escape"===e.key&&this.#m()}}"/>`:f`
													<span>${t}</span>
												`}
												${this.#h===s?f`
													<button class="valid" @click="${e=>this.#R(e,s)}">
														<svg class="valid">
															<use href="#valid"></use>
														</svg>
														<span>Valider</span>
													</button>
												`:f`
													<button class="edit" @click="${()=>{this.#h=s,this.#t()}}">
														<svg class="edit">
															<use href="#edit"></use>
														</svg>
														<span>Modifier</span>
													</button>
												`}
												${this.#h===s?f`
													<button type="button" class="undo" @click="${()=>this.#m()}">
														<svg class="undo">
															<use href="#undo"></use>
														</svg>
														<span>Annuler</span>
													</button>
												`:f`
													<button type="button" class="remove" @click="${()=>this.#B(s)}">
														<svg class="remove">
															<use href="#remove"></use>
														</svg>
														<span>Supprimer</span>
													</button>
												`}
											</div>
										</li>
									`})):f`
							<li>Aucune catégorie ...</li>`}
					</ul>
				</nav>
			</aside>
		`,this)}}class Ae extends HTMLElement{#z;get height(){return this.getAttribute("height")}connectedCallback(){this.style.cssText=`height: ${this.height||8e3}px; position: relative;display: block;`,this.#z=Array.from(this.querySelectorAll("*")).reduce(((e,t)=>{const s=`${t.tagName}.${t.className}`;return Array.from(t.attributes).forEach((i=>{if(i.name.includes("data")){e[s]||(e[s]=[]);const n=i.name.split("-");e[s].push({element:t,lowValue:Number(n[1]),highValue:Number(n[2]),animations:i.value})}})),e}),{});const e=Array.from(this.children);this.#t(),this.querySelector("slot").replaceWith(...e),document.body.addEventListener("scroll",(()=>this.#D())),this.#D()}#D(){const e=document.body.getBoundingClientRect(),t=this.getBoundingClientRect();if(e.height<t.height){const s=(e.y-t.y)/(t.height-e.height);this.#W(s)}}#W(e){Object.values(this.#z).forEach((t=>{for(const s of t)(e>=s.lowValue&&e<s.highValue||0===s.lowValue&&e<s.lowValue)&&(s.element.style=s.animations.replaceAll("§§proportion§§",`${e}`))}))}#t(){w(f`
			<div style="height: ${window.innerHeight}px; position: sticky; top: 0;">
				<slot></slot>
			</div>
		`,this)}}class we extends HTMLElement{static get observedAttributes(){return["visible"]}get visible(){return this.hasAttribute("visible")}set visible(e){e?this.setAttribute("visible",""):this.removeAttribute("visible")}connectedCallback(){this.#t(),this.style.display="none"}attributeChangedCallback(e,t,s){"visible"===e&&t!==s&&(""===s&&(this.style.display="",setTimeout((()=>this.#t()),20)),null===s&&(this.style.display="none",setTimeout((()=>this.#t()),20)))}#t(){w(f`
			<div class="spinner"></div>`,this)}}class Ee extends HTMLElement{get loadingTimer(){return Number(this.getAttribute("loadingTimer"))}constructor(){super(),this.style.visibility="hidden"}connectedCallback(){B.loader(!0),setTimeout((()=>{B.loader(!1),this.style.visibility="visible"}),this.loadingTimer)}#t(){w(f`
			<slot></slot>
		`,this)}}class Ie extends HTMLElement{#j;#V;#U;#F;#J;#Y;async connectedCallback(){this.#j=["Lundi","mardi","Mercredi","Jeudi","Vendredi","Samedi","Dimanche"],this.#V={Midi:this.#j,Soir:this.#j};const e=R.get("dishes","ingredients")||await B.request("/db","POST",{body:'[{ "getDishes": "" }, { "getIngredients": "" }]'});R.set("dishes",e[0],"ingredients",e[1]),this.#U=e[0],j.savedIngredients=e[1],this.#G()}#Z(e,t,s){e.target.closest("details").removeAttribute("open"),document.body.addEventListener("modalConfirm",(e=>{this.#F=e.detail.dishName||e.detail.title,this.#J=e.detail.choices&&e.detail.choices[0]||null})),B.confirm(s?f`
			<label for="firstname">
				<input type="text" value="${t?.name}" @input="${e=>document.body.dispatchEvent(new CustomEvent("modalConfirm",{detail:{dishName:e.target.value}}))}"/>
			</label>
		`:f`
			<fs-recipes choiceMode="radio"/>
		`,(async()=>{if(this.#F&&(t.name=this.#F,this.#U=await B.request("/db","POST",{body:`{ "setDish": ${JSON.stringify(t)} }`}),R.set("dishes",this.#U)),this.#G(),!s&&this.#F){const e=j.savedIngredients.filter((e=>e.recipes?.length&&e.recipes.some((e=>this.#J===e)))).map((e=>({title:e.title,category:e.category}))),t=await B.request("/db","POST",{body:`{ "setListIngredients": { "ingredients": ${JSON.stringify(e)} } }`});R.set("listIngredients",t),ve.send(t)}this.#F=""}))}#G(){this.#Y=this.#U.reduce(((e,t)=>(e[t.time]=e[t.time]??{},e[t.time][t.day]=e[t.time][t.day]??{},e[t.time][t.day]=t,e)),{}),this.#t()}#q(e,t){e&&e.target.closest("details").removeAttribute("open"),B.confirm(f`<h3>Voulez vous effacer ${t?"ce plat":"les plats de la semaine"} ?</h3>`,(async()=>{this.#U=await B.request("/db","POST",{body:`{ "clearDishes": "${t||""}" }`}),R.set("dishes",this.#U),this.#G()}))}#t(){w(f`
			<div class="title">
				<h2>Les plats de la semaine</h2>
				<button type="button" class="trash" @click="${()=>this.#q()}">
					<svg class="trash">
						<use href="#trash"></use>
					</svg>
					<span>Vider</span>
				</button>
			</div>
			<div class="content">
				<div class="grid">
					<div>#</div>
					${this.#j.map((e=>f`
							<div>${e}</div>
						`))}
				</div>
				${Object.entries(this.#V).map((([e,t])=>f`
						<div class="grid">
							<div>${e}</div>
							${t.map((t=>{const s=(this.#Y[e]&&this.#Y[e][t])??{time:e,day:t};return f`
									<details role="list">
										<summary aria-haspopup="listbox" role="button">${s.name}</summary>
										<ul role="listbox">
											<li>
												<button @click="${e=>this.#Z(e,s,!0)}">Éditer</button>
											</li>
											<li>
												<button @click="${e=>this.#Z(e,s)}">Ajouter</button>
											</li>
											${s._id&&f`
												<li>
													<button @click="${e=>this.#q(e,s._id)}">Effacer</button>
												</li>
											`}
										</ul>
									</details>
								`}))}
						</div>
					`))}
			</div>
		`,this)}}class ke extends HTMLElement{get href(){return this.getAttribute("href")}set href(e){this.setAttribute("open",e)}async connectedCallback(){const e=Array.from(this.children);this.#t(),this.querySelector("slot")?.replaceWith(...e);const t=await B.getFragmentHtml(this.href);this.addEventListener("click",(()=>{history.pushState({},"",this.href),Ce(t)}))}#t(){w(f`
			<slot></slot>
		`,this)}}const Ce=e=>{document.querySelector("[data-replaced-zone]").replaceChildren(document.createRange().createContextualFragment(e.text)),document.body.className=e.class,document.querySelector("[data-replaced-title]").innerHTML=e.title};window.addEventListener("popstate",(async()=>Ce(await B.getFragmentHtml(location.pathname))));class Me extends HTMLElement{#X;#K;#Q;constructor(){super(),this.style.display="none"}async connectedCallback(){this.#X=R.get("routes")||await B.request("/app/routes.json"),R.set("routes",this.#X),this.removeAttribute("style"),this.#ee(),window.addEventListener("resize",(e=>this.#ee())),window.addEventListener("popstate",(()=>this.#t()))}#ee(){this.#K=window.innerWidth<=1100,this.#Q=window.innerWidth<=1100,this.#K?this.setAttribute("data-burger",""):this.removeAttribute("data-burger"),this.#t()}#t(){w(f`
			${this.#K?f`
				<button class="burger" @click="${()=>{this.#Q=!1,this.#t()}}">
					<svg class="burger">
						<use href="#burger"></use>
					</svg>
					<span>Burger Menu</span>
				</button>
			`:""}
			<div data-hidden="${this.#Q}">
				${this.#K?f`
					<button class="back" @click="${()=>{this.#Q=!0,this.#t()}}">
						<svg class="back">
							<use href="#back"></use>
							<span>Retour</span>
						</svg>
					</button>
				`:""}
				<ul>
					${this.#X.map((e=>f`
						<li data-selected="${e.path===location.pathname}" @click="${()=>this.#ee()}">
							<fs-link href="${e.path}" role="button">
								<span>${e.label}</span>
							</fs-link>
						</li>
					`))}
				</ul>
			</div>
		`,this)}}new class{constructor(){B.helpers(),this.wakeLock(),ve.init(),"/"===location.href.charAt(location.href.length-1)&&history.replaceState({},"",location.href.replace(/\/$/,""))}async wakeLock(){let e=null;const t=async()=>{try{e=await navigator.wakeLock.request()}catch(e){console.error(`${e.name}, ${e.message}`)}};document.addEventListener("visibilitychange",(async()=>{null!==e&&"visible"===document.visibilityState&&await t()})),await t()}},customElements.define("fs-loader",we),customElements.define("fs-header",fe),customElements.define("fs-toast",H),customElements.define("fs-confirm",z),customElements.define("fs-propose",q),customElements.define("fs-recipes",D),customElements.define("fs-recipe",V),customElements.define("fs-lists",be),customElements.define("fs-ingredients",W),customElements.define("fs-categories",$e),customElements.define("fs-login",ye),customElements.define("fs-loading-block",Ee),customElements.define("fs-animated-section",Ae),customElements.define("fs-dishes",Ie),customElements.define("fs-link",ke),customElements.define("fs-menu",Me);
